{"version":3,"sources":["B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/~/@angular/material/_theming.scss","B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/styles.scss","B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/styles.scss","B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/~/roboto-fontface/css/roboto/roboto-fontface.css"],"names":[],"mappings":"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","file":"styles.bundle.css","sourcesContent":["// Import all the theming functionality.\n// Core styles that can be used to apply material design treatments to any element.\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    text-transform: none;\n    width: 1px;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n@mixin cdk-high-contrast {\n  @media screen and (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO(crisbeto): this isn't being used anywhere within Material. keeping for backwards compat.\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n$_umbra-color: rgba(black, 0.2);\n$_penumbra-color: rgba(black, 0.14);\n$_ambient-color: rgba(black, 0.12);\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n$_umbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_umbra-color}',\n  1: '0px 2px 1px -1px #{$_umbra-color}',\n  2: '0px 3px 1px -2px #{$_umbra-color}',\n  3: '0px 3px 3px -2px #{$_umbra-color}',\n  4: '0px 2px 4px -1px #{$_umbra-color}',\n  5: '0px 3px 5px -1px #{$_umbra-color}',\n  6: '0px 3px 5px -1px #{$_umbra-color}',\n  7: '0px 4px 5px -2px #{$_umbra-color}',\n  8: '0px 5px 5px -3px #{$_umbra-color}',\n  9: '0px 5px 6px -3px #{$_umbra-color}',\n  10: '0px 6px 6px -3px #{$_umbra-color}',\n  11: '0px 6px 7px -4px #{$_umbra-color}',\n  12: '0px 7px 8px -4px #{$_umbra-color}',\n  13: '0px 7px 8px -4px #{$_umbra-color}',\n  14: '0px 7px 9px -4px #{$_umbra-color}',\n  15: '0px 8px 9px -5px #{$_umbra-color}',\n  16: '0px 8px 10px -5px #{$_umbra-color}',\n  17: '0px 8px 11px -5px #{$_umbra-color}',\n  18: '0px 9px 11px -5px #{$_umbra-color}',\n  19: '0px 9px 12px -6px #{$_umbra-color}',\n  20: '0px 10px 13px -6px #{$_umbra-color}',\n  21: '0px 10px 13px -6px #{$_umbra-color}',\n  22: '0px 10px 14px -6px #{$_umbra-color}',\n  23: '0px 11px 14px -7px #{$_umbra-color}',\n  24: '0px 11px 15px -7px #{$_umbra-color}'\n);\n\n$_penumbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\n);\n\n$_ambient-elevation-map: (\n  0: '0px 0px 0px 0px #{$_ambient-color}',\n  1: '0px 1px 3px 0px #{$_ambient-color}',\n  2: '0px 1px 5px 0px #{$_ambient-color}',\n  3: '0px 1px 8px 0px #{$_ambient-color}',\n  4: '0px 1px 10px 0px #{$_ambient-color}',\n  5: '0px 1px 14px 0px #{$_ambient-color}',\n  6: '0px 1px 18px 0px #{$_ambient-color}',\n  7: '0px 2px 16px 1px #{$_ambient-color}',\n  8: '0px 3px 14px 2px #{$_ambient-color}',\n  9: '0px 3px 16px 2px #{$_ambient-color}',\n  10: '0px 4px 18px 3px #{$_ambient-color}',\n  11: '0px 4px 20px 3px #{$_ambient-color}',\n  12: '0px 5px 22px 4px #{$_ambient-color}',\n  13: '0px 5px 24px 4px #{$_ambient-color}',\n  14: '0px 5px 26px 4px #{$_ambient-color}',\n  15: '0px 6px 28px 5px #{$_ambient-color}',\n  16: '0px 6px 30px 5px #{$_ambient-color}',\n  17: '0px 6px 32px 5px #{$_ambient-color}',\n  18: '0px 7px 34px 6px #{$_ambient-color}',\n  19: '0px 7px 36px 6px #{$_ambient-color}',\n  20: '0px 8px 38px 7px #{$_ambient-color}',\n  21: '0px 8px 40px 7px #{$_ambient-color}',\n  22: '0px 8px 42px 7px #{$_ambient-color}',\n  23: '0px 9px 44px 8px #{$_ambient-color}',\n  24: '0px 9px 46px 8px #{$_ambient-color}'\n);\n\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get($_umbra-elevation-map, $zValue)},\n              #{map-get($_penumbra-elevation-map, $zValue)},\n              #{map-get($_ambient-elevation-map, $zValue)};\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n\n    // TODO(jelbourn): figure out if there are actually spec'ed colors for both light and dark\n    // themes here. Currently using the values from AngularJS Material.\n    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0.48;\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    background: none;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n// Color palettes from the Material Design spec.\n// See https://www.google.com/design/spec/style/color.html\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n$black-87-opacity: rgba(black, 0.87);\n$white-87-opacity: rgba(white, 0.87);\n$black-12-opacity: rgba(black, 0.12);\n$white-12-opacity: rgba(white, 0.12);\n$black-6-opacity: rgba(black, 0.06);\n$white-6-opacity: rgba(white, 0.06);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: $white-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: white,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-grey: (\n  0: #ffffff,\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  1000: #000000,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    0: $black-87-opacity,\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    1000: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: white,\n    500: white,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: $black-12-opacity,\n  raised-button: white,\n  focused-button: $black-6-opacity,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: $white-12-opacity,\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $white-6-opacity,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: map_get($mat-grey, 1000),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $black-12-opacity,\n  dividers:          $black-12-opacity,\n  disabled:          rgba(black, 0.38),\n  disabled-button:   rgba(black, 0.38),\n  disabled-text:     rgba(black, 0.38),\n  hint-text:         rgba(black, 0.38),\n  secondary-text:    rgba(black, 0.54),\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $white-12-opacity,\n  dividers:          $white-12-opacity,\n  disabled:          rgba(white, 0.3),\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     rgba(white, 0.3),\n  hint-text:         rgba(white, 0.3),\n  secondary-text:    rgba(white, 0.7),\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n  $opacity: if($opacity == null, opacity($color), $opacity);\n\n  @return rgba($color, $opacity);\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n  // The host element of an md-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripple divs it creates inside itself are correctly positioned.\n  .mat-ripple {\n    overflow: hidden;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n  }\n}\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n/** The mixins below are shared between md-menu and md-select */\n\n// menu width must be a multiple of 56px\n$mat-menu-overlay-min-width: 112px !default;   // 56 * 2\n$mat-menu-overlay-max-width: 280px !default;   // 56 * 5\n\n$mat-menu-item-height: 48px !default;\n$mat-menu-side-padding: 16px !default;\n$mat-menu-icon-margin: 16px !default;\n\n\n@mixin mat-menu-base() {\n  @include mat-elevation(8);\n  min-width: $mat-menu-overlay-min-width;\n  max-width: $mat-menu-overlay-max-width;\n\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;   // for momentum scroll on mobile\n}\n\n@mixin mat-menu-item-base() {\n  @include mat-truncate-line();\n\n  // Needs to be a block for the ellipsis to work.\n  display: block;\n  line-height: $mat-menu-item-height;\n  height: $mat-menu-item-height;\n  padding: 0 $mat-menu-side-padding;\n\n  text-align: left;\n  text-decoration: none;   // necessary to reset anchor tags\n\n  &[disabled] {\n    cursor: default;\n  }\n\n  [dir='rtl'] & {\n    text-align: right;\n  }\n\n  .mat-icon {\n    margin-right: $mat-menu-icon-margin;\n\n    [dir='rtl'] & {\n      margin-left: $mat-menu-icon-margin;\n      margin-right: 0;\n    }\n  }\n}\n\n/**\n * This mixin adds the correct panel transform styles based\n * on the direction that the menu panel opens.\n */\n@mixin mat-menu-positions() {\n  &.mat-menu-after.mat-menu-below {\n    transform-origin: left top;\n  }\n\n  &.mat-menu-after.mat-menu-above {\n    transform-origin: left bottom;\n  }\n\n  &.mat-menu-before.mat-menu-below {\n    transform-origin: right top;\n  }\n\n  &.mat-menu-before.mat-menu-above {\n    transform-origin: right bottom;\n  }\n\n  [dir='rtl'] & {\n    &.mat-menu-after.mat-menu-below {\n      transform-origin: right top;\n    }\n\n    &.mat-menu-after.mat-menu-above {\n      transform-origin: right bottom;\n    }\n\n    &.mat-menu-before.mat-menu-below {\n      transform-origin: left top;\n    }\n\n    &.mat-menu-before.mat-menu-above {\n      transform-origin: left bottom;\n    }\n  }\n}\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n/* stylelint-enable */\n\n\n\n/**\n * This mixin contains shared option styles between the select and\n * autocomplete components.\n */\n@mixin mat-option() {\n  .mat-option {\n    @include mat-menu-item-base();\n    position: relative;\n    cursor: pointer;\n    outline: none;\n\n    &[aria-disabled='true'] {\n      @include user-select(none);\n      cursor: default;\n    }\n\n    .mat-optgroup &:not(.mat-option-multiple) {\n      padding-left: $mat-menu-side-padding * 2;\n\n      [dir='rtl'] & {\n        padding-left: $mat-menu-side-padding;\n        padding-right: $mat-menu-side-padding * 2;\n      }\n    }\n  }\n\n  .mat-option-ripple {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    // Disable pointer events for the ripple container because the container will overlay the\n    // user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n\n    // Prevents the ripple from completely covering the option in high contrast mode.\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  .mat-option-pseudo-checkbox {\n    $margin: $mat-menu-side-padding / 2;\n    margin-right: $margin;\n\n    [dir='rtl'] & {\n      margin-left: $margin;\n      margin-right: 0;\n    }\n  }\n}\n\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config) {\n  @return unquote(map-get($config, font-family));\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config);\n\n  // Use the shorthand `font` to represent a typography level, because it's the shortest. Notes that\n  // we need to use interpolation for `font-size/line-height` in order to prevent SASS from dividing\n  // the two values.\n  font: $font-weight #{$font-size}/#{$line-height} $font-family;\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled), &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-selected.mat-primary, .mat-primary &.mat-selected {\n      color: mat-color($primary);\n    }\n\n    &.mat-selected.mat-accent, .mat-accent &.mat-selected {\n      color: mat-color($accent);\n    }\n\n    &.mat-selected.mat-warn, .mat-warn &.mat-selected {\n      color: mat-color($warn);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n@mixin mat-optgroup() {\n  .mat-optgroup-label {\n    @include mat-menu-item-base();\n    @include user-select(none);\n    cursor: default;\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin _mat-pseudo-checkbox-inner-content-theme($theme, $pallete-name) {\n  $pallete: map-get($theme, $pallete-name);\n  $color: mat-color($pallete);\n\n  .mat-pseudo-checkbox-checked.mat-#{$pallete-name},\n  .mat-pseudo-checkbox-indeterminate.mat-#{$pallete-name},\n  .mat-#{$pallete-name} .mat-pseudo-checkbox-checked,\n  .mat-#{$pallete-name} .mat-pseudo-checkbox-indeterminate {\n    background: $color;\n  }\n}\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, primary);\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, accent);\n  @include _mat-pseudo-checkbox-inner-content-theme($theme, warn);\n\n  .mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level($font-size, $line-height: $font-size, $font-weight: 400) {\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300),\n  $display-3:     mat-typography-level(56px, 56px, 400),\n  $display-2:     mat-typography-level(45px, 48px, 400),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n  @return (\n    font-family:    $font-family,\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    font-size: mat-font-size($config, body-1) * 0.83;\n    font-weight: mat-font-weight($config, body-1);\n    font-family: mat-font-family($config);\n    line-height: mat-line-height($config, body-1);\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    font-size: mat-font-size($config, body-1) * 0.67;\n    font-weight: mat-font-weight($config, body-1);\n    font-family: mat-font-family($config);\n    line-height: mat-line-height($config, body-1);\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  // Note: The spec doesn't mention letter spacing. The value comes from\n  // eyeballing it until it looked exactly like the spec examples.\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n    letter-spacing: -0.05em;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n    letter-spacing: -0.02em;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n    letter-spacing: -0.005em;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    .mat-option {\n      // Selected options in autocompletes should not be gray, but we\n      // only want to override the background for selected options if\n      // they are *not* in hover or focus state. This change has to be\n      // made here because base option styles are shared between the\n      // autocomplete and the select.\n      &.mat-selected:not(.mat-active):not(:hover) {\n        background: mat-color($background, card);\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n\n\n\n// Applies a focus style to an md-button element for each of the supported palettes.\n@mixin _mat-button-focus-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary, 0.12);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent, 0.12);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn, 0.12);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: 0.2) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an md-button element for each of the supported palettes.\n@mixin _mat-button-theme-color($theme, $property, $color: 'default') {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $color);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $color);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $color);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button {\n    background: transparent;\n\n    @include _mat-button-focus-color($theme);\n    @include _mat-button-theme-color($theme, 'color');\n  }\n\n  .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default properties when not using any [color] value.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-color($theme, 'color', default-contrast);\n    @include _mat-button-theme-color($theme, 'background-color');\n\n    // Add ripple effect with contrast color to buttons that don't have a focus overlay.\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  // Add ripple effect with default color to flat buttons, which also have a focus overlay.\n  .mat-button {\n    @include _mat-button-ripple-color($theme, default, 0.1);\n  }\n\n  // Add ripple effect with default color to the icon button. Ripple color needs to be stronger\n  // since the icon button doesn't have a focus overlay.\n  .mat-icon-button {\n    @include _mat-button-ripple-color($theme, default);\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n// Applies a focus style to an md-button-toggle element for each of the supported palettes.\n@mixin _mat-button-toggle-focus-color($theme) {\n  $background: map-get($theme, background);\n\n  .mat-button-toggle-focus-overlay {\n    background-color: mat-color($background, focused-button);\n  }\n}\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    &.cdk-focused {\n      @include _mat-button-toggle-focus-color($theme);\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, base);\n  }\n\n  .mat-button-toggle-disabled {\n    background-color: mat-color($background, disabled-button-toggle);\n    color: mat-color($foreground, disabled-button);\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, headline);\n    }\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content,\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color(map-get($theme, foreground), secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an attribute on the SVG in order\n    // for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked, &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary, 0.26);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent, 0.26);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn, 0.26);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n// TODO(crisbeto): these values don't correspond to any of the typography breakpoints.\n$mat-chip-font-size: 13px;\n$mat-chip-line-height: 16px;\n\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Use spec-recommended color for regular foreground, and utilise contrast color for a grey very\n  // close to the selected spec since no guidance is provided and to ensure palette consistency.\n  $light-foreground: rgba(0, 0, 0, 0.87);\n  $light-selected-foreground: mat-contrast($mat-grey, 600);\n\n  // The spec only provides guidance for light-themed chips. When inside of a dark theme, fall back\n  // to standard background and foreground colors.\n  $unselected-background: if($is-dark-theme, mat-color($background, card), #e0e0e0);\n  $unselected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-foreground);\n\n  $selected-background: if($is-dark-theme, mat-color($background, app-bar), #808080);\n  $selected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-selected-foreground);\n\n  .mat-chip:not(.mat-basic-chip) {\n    background-color: $unselected-background;\n    color: $unselected-foreground;\n  }\n\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip) {\n    background-color: $selected-background;\n    color: $selected-foreground;\n\n    &.mat-primary {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      background-color: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n\n    &.mat-warn {\n      background-color: mat-color($warn);\n      color: mat-color($warn, default-contrast);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip:not(.mat-basic-chip) {\n    font-size: $mat-chip-font-size;\n    line-height: $mat-chip-line-height;\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-row, .mat-header-row {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n\n@mixin mat-datepicker-theme($theme) {\n  $primary: map-get($theme, primary);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  $mat-datepicker-selected-today-box-shadow-width: 1px;\n  $mat-datepicker-selected-fade-amount: 0.6;\n  $mat-datepicker-today-fade-amount: 0.2;\n\n  .mat-datepicker-content {\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-next-button,\n  .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n\n    .mat-calendar-body-disabled > &:not(.mat-calendar-body-selected) {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  :not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($primary);\n    color: mat-color($primary, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: fade-out(mat-color($primary), $mat-datepicker-selected-fade-amount);\n  }\n\n  .mat-calendar-body-today {\n    &:not(.mat-calendar-body-selected) {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n\n    &.mat-calendar-body-selected {\n      box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                  mat-color($primary, default-contrast);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    border-color: fade-out(mat-color($foreground, hint-text), $mat-datepicker-today-fade-amount);\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Placeholder colors. Required is used for the `*` star shown in the placeholder.\n  $input-placeholder-color: mat-color($foreground, hint-text);\n  $input-floating-placeholder-color: mat-color($primary);\n  $input-required-placeholder-color: mat-color($accent);\n\n  // Underline colors.\n  $input-underline-color: mat-color($foreground, divider);\n  $input-underline-color-accent: mat-color($accent);\n  $input-underline-color-warn: mat-color($warn);\n  $input-underline-focused-color: mat-color($primary);\n\n  .mat-input-placeholder {\n    color: $input-placeholder-color;\n  }\n\n  // :focus is applied to the input, but we apply mat-focused to the other elements\n  // that need to listen to it.\n  .mat-focused .mat-input-placeholder {\n    color: $input-floating-placeholder-color;\n\n    &.mat-accent {\n      color: $input-underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $input-underline-color-warn;\n    }\n  }\n\n  .mat-input-element:disabled {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  // See _mat-input-placeholder-floating mixin in input-container.scss\n  input.mat-input-element:-webkit-autofill + .mat-input-placeholder,\n  .mat-focused .mat-input-placeholder.mat-float {\n    .mat-placeholder-required {\n      color: $input-required-placeholder-color;\n    }\n  }\n\n  .mat-input-underline {\n    background-color: $input-underline-color;\n  }\n\n  .mat-input-ripple {\n    background-color: $input-underline-focused-color;\n\n    &.mat-accent {\n      background-color: $input-underline-color-accent;\n    }\n\n    &.mat-warn {\n      background-color: $input-underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the input container. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-input-invalid {\n    .mat-input-placeholder {\n      color: $input-underline-color-warn;\n\n      &.mat-accent,\n      &.mat-float .mat-placeholder-required {\n        color: $input-underline-color-warn;\n      }\n    }\n\n    .mat-input-ripple {\n      background-color: $input-underline-color-warn;\n    }\n  }\n\n  .mat-input-error {\n    color: $input-underline-color-warn;\n  }\n}\n\n// Applies a floating placeholder above the input itself.\n@mixin _mat-input-placeholder-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding)\n             scale($font-scale)\n             // We use perspecitve to fix the text blurriness as described here:\n             // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n             // This results in a small jitter after the label floats on Firefox, which the\n             // translateZ fixes.\n             perspective(100px) translateZ(0.001px);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding)\n                 scale($font-scale);\n\n  width: 100% / $font-scale;\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the input-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the input table and the subscript container. Mocks show half of\n  // the text size, but this margin is applied to an element with the subscript text font size, so\n  // we need to divide by the scale factor to make it half of the original text size. We again need\n  // to subtract off the line spacing since the mocks measure to the edge of the text, not the  edge\n  // of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - $line-spacing;\n  // The padding applied to the input-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-input-container {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-input-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-input-prefix,\n  .mat-input-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon,\n    .mat-datepicker-toggle {\n      font-size: $prefix-suffix-icon-font-size;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        line-height: $prefix-suffix-icon-font-scale;\n      }\n    }\n  }\n\n  .mat-input-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-input-element {\n    &:-webkit-autofill + .mat-input-placeholder-wrapper .mat-float {\n      @include _mat-input-placeholder-floating($subscript-font-scale,\n          $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-input-placeholder-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-input-placeholder {\n    top: $infix-margin-top + $infix-padding;\n\n    // Show the placeholder above the input when it's not empty, or focused.\n    &.mat-float:not(.mat-empty), .mat-focused &.mat-float {\n      @include _mat-input-placeholder-floating($subscript-font-scale,\n          $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-input-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-input-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list, .mat-nav-list {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-nav-list .mat-list-item {\n    outline: none;\n\n    &:hover, &.mat-list-item-focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list, .mat-nav-list {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      @include mat-typography-level-to-styles($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list[dense], .mat-nav-list[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font: mat-font-weight($config, body-2) mat-font-size($config, caption) $font-family;\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-content {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      color: mat-color($foreground, 'disabled');\n    }\n\n    .mat-icon {\n      color: mat-color($foreground, 'icon');\n      vertical-align: middle;\n    }\n\n    &:hover:not([disabled]), &:focus:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-increment,\n  .mat-paginator-decrement {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-increment,\n    .mat-paginator-decrement {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n    }\n  }\n\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    background-image: #{_mat-progress-bar-buffer($primary, lighter)};\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      background-image: #{_mat-progress-bar-buffer($accent, lighter)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      background-image: #{_mat-progress-bar-buffer($warn, lighter)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n// TODO(josephperrott): Find better way to inline svgs.\n// In buffer mode a repeated SVG object is used as a background.\n// Each of the following defines the SVG object for each of the class defined colors.\n//\n// The string is a URL encoded version of:\n//\n// <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n//      version=\"1.1\" x=\"0px\" y=\"0px\" enable-background=\"new 0 0 5 2\"\n//      xml:space=\"preserve\" viewBox=\"0 0 5 2\" preserveAspectRatio=\"none slice\">\n//   <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"{INJECTED_COLOR}\"/>\n// </svg>\n@function _mat-progress-bar-buffer($palette, $hue) {\n  $color: mat-color($palette, $hue) + '';\n\n  // We also need to escape the hash in hex colors,\n  // otherwise IE will throw an XML error.\n  @if str-index($color, '#') == 1 {\n    $color: '%23' + str-slice($color, 2);\n  }\n\n  $result: '' +\n    'data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2F' +\n    'www.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%2' +\n    '7%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%' +\n    '3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none' +\n    '%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27' +\n    $color + '%27%2F%3E%3C%2Fsvg%3E';\n\n  @return url($result);\n}\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    path {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent path {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn path {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle {\n    background-color: mat-color($palette);\n  }\n\n  .mat-radio-ripple .mat-ripple-element {\n    background-color: mat-color($palette, 0.26);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-disabled .mat-radio-outer-circle {\n    border-color: mat-color($foreground, disabled);\n  }\n\n  .mat-radio-disabled {\n    .mat-radio-ripple .mat-ripple-element, .mat-radio-inner-circle {\n      background-color: mat-color($foreground, disabled);\n    }\n\n    .mat-radio-label-content {\n      color: mat-color($foreground, disabled);\n    }\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include mat-radio-color($warn);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-select-inner-content-theme($palette) {\n  $color: mat-color($palette);\n\n  .mat-select-trigger, .mat-select-arrow {\n    color: $color;\n  }\n\n  .mat-select-underline {\n    background-color: $color;\n  }\n}\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-trigger,\n  .mat-select-arrow {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-select-underline {\n    background-color: mat-color($foreground, divider);\n  }\n\n  .mat-select-disabled .mat-select-value,\n  .mat-select-arrow,\n  .mat-select-trigger {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-select-content, .mat-select-panel-done-animating {\n    background: mat-color($background, card);\n  }\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select:focus:not(.mat-select-disabled) {\n    &.mat-primary {\n      @include _mat-select-inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-select-inner-content-theme($accent);\n    }\n  }\n\n  .mat-select:focus:not(.mat-select-disabled).mat-warn,\n  .mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) {\n    @include _mat-select-inner-content-theme($warn);\n  }\n}\n\n@mixin mat-select-typography($config) {\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    font-size: mat-font-size($config, subheading-2);\n  }\n}\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // We use invert() here to have the darken the background color expected to be used. If the\n  // background is light, we use a dark backdrop. If the background is dark,\n  // we use a light backdrop.\n  $sidenav-backdrop-color: invert(mat-color($background, card, 0.6)) !default;\n  $sidenav-background-color: mat-color($background, dialog) !default;\n  $sidenav-container-background-color:  mat-color($background, background) !default;\n  $sidenav-push-background-color: mat-color($background, dialog) !default;\n\n  .mat-sidenav-container {\n    background-color: $sidenav-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-sidenav {\n    background-color: $sidenav-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-sidenav-push {\n      background-color: $sidenav-push-background-color;\n    }\n  }\n\n  .mat-sidenav-backdrop.mat-sidenav-shown {\n    background-color: $sidenav-backdrop-color;\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  // Do not apply the checked colors if the toggle is disabled, because the specificity would be to high for\n  // the disabled styles.\n  &.mat-checked:not(.mat-disabled) {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      background-color: mat-color($palette, $thumb-checked-hue, 0.5);\n    }\n  }\n}\n\n// Applies the specified colors to the slide-toggle ripple elements.\n@mixin _mat-slide-toggle-ripple($palette, $ripple-unchecked-color, $ripple-checked-color) {\n  &:not(.mat-checked) .mat-ripple-element {\n    background-color: $ripple-unchecked-color;\n  }\n  .mat-ripple-element {\n    background-color: $ripple-checked-color;\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues based on the specs, which prescribe different hues for dark and light themes\n  // https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $thumb-normal-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: if($is-dark, 200, 500);\n  $thumb-disabled-hue: if($is-dark, 800, 400);\n\n  $bar-normal-color: mat-color($foreground, disabled);\n  $bar-disabled-color: if($is-dark, rgba(white, 0.12), rgba(black, 0.1));\n\n  // Ripple colors are based on the current palette and the state of the slide-toggle.\n  // See https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $ripple-checked-opacity: 0.12;\n  $ripple-unchecked-color: mat-color($foreground, base, if($is-dark, 0.12, 0.06));\n  $ripple-primary-color: mat-color($primary, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-accent-color: mat-color($accent, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-warn-color: mat-color($warn, $thumb-checked-hue, $ripple-checked-opacity);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n    @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-accent-color);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-primary-color);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-warn-color);\n    }\n\n  }\n\n  .mat-disabled {\n    .mat-slide-toggle-thumb {\n      // The thumb of the slide-toggle always uses the hue 400 of the grey palette in dark or light themes.\n      // Since this is very specific to the slide-toggle component, we're not providing\n      // it in the background palette.\n      background-color: mat-color($mat-grey, $thumb-disabled-hue);\n    }\n    .mat-slide-toggle-bar {\n      background-color: $bar-disabled-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    background-color: mat-color($mat-grey, $thumb-normal-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-normal-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, base);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label:focus {\n    background-color: mat-color($primary, lighter, 0.3);\n  }\n\n  .mat-ink-bar {\n    background-color: mat-color($primary);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n// TODO(crisbeto): these doesn't correspond to any typography levels\n// and the width/height appear to be off from the spec.\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n}\n\n\n\n@mixin mat-simple-snack-bar-theme($theme) { }\n\n@mixin mat-simple-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: mat-typography-config()) {\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-simple-snack-bar-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core() {\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .mat-elevation-z#{$zValue} {\n      @include mat-elevation($zValue);\n    }\n  }\n\n  @include angular-material-typography();\n  @include mat-ripple();\n  @include mat-option();\n  @include mat-optgroup();\n  @include cdk-a11y();\n  @include cdk-overlay();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Wrapper element that provides the theme background when the\n  // user's content isn't inside of a `md-sidenav-container`.\n  .mat-app-background {\n    $background: map-get($theme, background);\n    background-color: mat-color($background, background);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  .mat-theme-loaded-marker {\n    display: none;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    background: mat-color($background, card);\n    color: mat-color($foreground, base);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel-header:focus, \n  .mat-expansion-panel-header:hover {\n    background: mat-color($background, hover);\n  }\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-simple-snack-bar-theme($theme);\n}\n\n\n\n// WEBPACK FOOTER //\n// B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/~/@angular/material/_theming.scss","/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n/* Theme for the ripple elements.*/\n/** The mixins below are shared between md-menu and md-select */\n/**\n * This mixin adds the correct panel transform styles based\n * on the direction that the menu panel opens.\n */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n/**\n * This mixin contains shared option styles between the select and\n * autocomplete components.\n */\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 16px; }\n\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 16px; }\n\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 16px; }\n\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 16px; }\n\n.mat-h5, .mat-typography h5 {\n  font-size: 11.62px;\n  font-weight: 400;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  line-height: 20px;\n  margin: 0 0 12px; }\n\n.mat-h6, .mat-typography h6 {\n  font-size: 9.38px;\n  font-weight: 400;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  line-height: 20px;\n  margin: 0 0 12px; }\n\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif; }\n  .mat-body p, .mat-body-1 p, .mat-typography p {\n    margin: 0 0 12px; }\n\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 56px;\n  letter-spacing: -0.05em; }\n\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 64px;\n  letter-spacing: -0.02em; }\n\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 64px;\n  letter-spacing: -0.005em; }\n\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 64px; }\n\n.mat-button, .mat-raised-button, .mat-icon-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 400; }\n\n.mat-card-subtitle,\n.mat-card-content,\n.mat-card-header .mat-card-title {\n  font-size: 14px; }\n\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px; }\n\n.mat-chip:not(.mat-basic-chip) {\n  font-size: 13px;\n  line-height: 16px; }\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-cell {\n  font-size: 14px; }\n\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-calendar-body {\n  font-size: 13px; }\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400; }\n\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px; }\n  .mat-grid-tile-header .mat-line,\n  .mat-grid-tile-footer .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-grid-tile-header .mat-line:nth-child(n+2),\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-input-container {\n  font: 400 inherit/1.125 Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-input-wrapper {\n  padding-bottom: 1.296875em; }\n\n.mat-input-prefix .mat-icon,\n.mat-input-prefix .mat-datepicker-toggle,\n.mat-input-suffix .mat-icon,\n.mat-input-suffix .mat-datepicker-toggle {\n  font-size: 150%; }\n\n.mat-input-prefix .mat-icon-button,\n.mat-input-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em; }\n  .mat-input-prefix .mat-icon-button .mat-icon,\n  .mat-input-suffix .mat-icon-button .mat-icon {\n    line-height: 1.5; }\n\n.mat-input-infix {\n  padding: 0.4375em 0;\n  border-top: 0.84375em solid transparent; }\n\n.mat-input-element:-webkit-autofill + .mat-input-placeholder-wrapper .mat-float {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.33333333%; }\n\n.mat-input-placeholder-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em; }\n\n.mat-input-placeholder {\n  top: 1.28125em; }\n  .mat-input-placeholder.mat-float:not(.mat-empty), .mat-focused .mat-input-placeholder.mat-float {\n    transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n    -ms-transform: translateY(-1.28125em) scale(0.75);\n    width: 133.33333333%; }\n\n.mat-input-underline {\n  bottom: 1.296875em; }\n\n.mat-input-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.60416667em;\n  top: calc(100% - 1.72916667em); }\n\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px; }\n\n.mat-paginator {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px; }\n\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px; }\n\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select-trigger {\n  font-size: 16px; }\n\n.mat-slide-toggle-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-slider-thumb-label-text {\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0; }\n\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px; }\n\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item {\n  font-size: 16px; }\n  .mat-list .mat-list-item .mat-line, .mat-nav-list .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 14px; }\n\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list[dense] .mat-list-item, .mat-nav-list[dense] .mat-list-item {\n  font-size: 12px; }\n  .mat-list[dense] .mat-list-item .mat-line, .mat-nav-list[dense] .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list[dense] .mat-list-item .mat-line:nth-child(n+2), .mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-list[dense] .mat-subheader, .mat-nav-list[dense] .mat-subheader {\n  font: 500 12px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px; }\n\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px; }\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500; }\n\n.mat-ripple {\n  overflow: hidden; }\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible; }\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0); }\n\n.mat-option {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  line-height: 48px;\n  height: 48px;\n  padding: 0 16px;\n  text-align: left;\n  text-decoration: none;\n  position: relative;\n  cursor: pointer;\n  outline: none; }\n  .mat-option[disabled] {\n    cursor: default; }\n  [dir='rtl'] .mat-option {\n    text-align: right; }\n  .mat-option .mat-icon {\n    margin-right: 16px; }\n    [dir='rtl'] .mat-option .mat-icon {\n      margin-left: 16px;\n      margin-right: 0; }\n  .mat-option[aria-disabled='true'] {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: default; }\n  .mat-optgroup .mat-option:not(.mat-option-multiple) {\n    padding-left: 32px; }\n    [dir='rtl'] .mat-optgroup .mat-option:not(.mat-option-multiple) {\n      padding-left: 16px;\n      padding-right: 32px; }\n\n.mat-option-ripple {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none; }\n  @media screen and (-ms-high-contrast: active) {\n    .mat-option-ripple {\n      opacity: 0.5; } }\n\n.mat-option-pseudo-checkbox {\n  margin-right: 8px; }\n  [dir='rtl'] .mat-option-pseudo-checkbox {\n    margin-left: 8px;\n    margin-right: 0; }\n\n.mat-optgroup-label {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  line-height: 48px;\n  height: 48px;\n  padding: 0 16px;\n  text-align: left;\n  text-decoration: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: default; }\n  .mat-optgroup-label[disabled] {\n    cursor: default; }\n  [dir='rtl'] .mat-optgroup-label {\n    text-align: right; }\n  .mat-optgroup-label .mat-icon {\n    margin-right: 16px; }\n    [dir='rtl'] .mat-optgroup-label .mat-icon {\n      margin-left: 16px;\n      margin-right: 0; }\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  text-transform: none;\n  width: 1px; }\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%; }\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000; }\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000; }\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000; }\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0; }\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.48; }\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.6); }\n\n.cdk-overlay-transparent-backdrop {\n  background: none; }\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll; }\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-option {\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n    background: rgba(0, 0, 0, 0.04); }\n  .mat-option.mat-selected.mat-primary, .mat-primary .mat-option.mat-selected {\n    color: #64b5f6; }\n  .mat-option.mat-selected.mat-accent, .mat-accent .mat-option.mat-selected {\n    color: #9e9e9e; }\n  .mat-option.mat-selected.mat-warn, .mat-warn .mat-option.mat-selected {\n    color: #f44336; }\n  .mat-option.mat-selected:not(.mat-option-multiple) {\n    background: rgba(0, 0, 0, 0.04); }\n  .mat-option.mat-active {\n    background: rgba(0, 0, 0, 0.04);\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-option.mat-option-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54); }\n  .mat-pseudo-checkbox::after {\n    color: #fafafa; }\n\n.mat-pseudo-checkbox-checked.mat-primary,\n.mat-pseudo-checkbox-indeterminate.mat-primary,\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #64b5f6; }\n\n.mat-pseudo-checkbox-checked.mat-accent,\n.mat-pseudo-checkbox-indeterminate.mat-accent,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #9e9e9e; }\n\n.mat-pseudo-checkbox-checked.mat-warn,\n.mat-pseudo-checkbox-indeterminate.mat-warn,\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336; }\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0; }\n\n.mat-app-background {\n  background-color: #fafafa; }\n\n.mat-theme-loaded-marker {\n  display: none; }\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n    background: white;\n    color: rgba(0, 0, 0, 0.87); }\n\n.mat-button, .mat-icon-button {\n  background: transparent; }\n  .mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay {\n    background-color: rgba(100, 181, 246, 0.12); }\n  .mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay {\n    background-color: rgba(158, 158, 158, 0.12); }\n  .mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay {\n    background-color: rgba(244, 67, 54, 0.12); }\n  .mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay {\n    background-color: transparent; }\n  .mat-button.mat-primary, .mat-icon-button.mat-primary {\n    color: #64b5f6; }\n  .mat-button.mat-accent, .mat-icon-button.mat-accent {\n    color: #9e9e9e; }\n  .mat-button.mat-warn, .mat-icon-button.mat-warn {\n    color: #f44336; }\n  .mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white; }\n  .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    color: white; }\n  .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n  .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #64b5f6; }\n  .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    background-color: #9e9e9e; }\n  .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    background-color: #f44336; }\n  .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    background-color: rgba(0, 0, 0, 0.12); }\n  .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n    background-color: rgba(0, 0, 0, 0.2); }\n  .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n    background-color: rgba(0, 0, 0, 0.2); }\n  .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n    background-color: rgba(255, 255, 255, 0.2); }\n\n.mat-button.mat-primary .mat-ripple-element {\n  background-color: rgba(100, 181, 246, 0.1); }\n\n.mat-button.mat-accent .mat-ripple-element {\n  background-color: rgba(158, 158, 158, 0.1); }\n\n.mat-button.mat-warn .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.1); }\n\n.mat-icon-button.mat-primary .mat-ripple-element {\n  background-color: rgba(100, 181, 246, 0.2); }\n\n.mat-icon-button.mat-accent .mat-ripple-element {\n  background-color: rgba(158, 158, 158, 0.2); }\n\n.mat-icon-button.mat-warn .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.2); }\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-button-toggle.cdk-focused .mat-button-toggle-focus-overlay {\n    background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: black; }\n\n.mat-button-toggle-disabled {\n  background-color: #eeeeee;\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-button-toggle-disabled.mat-button-toggle-checked {\n    background-color: #bdbdbd; }\n\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-checkmark {\n  fill: #fafafa; }\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important; }\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa; }\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #64b5f6; }\n\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #9e9e9e; }\n\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336; }\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0; }\n\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0; }\n\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: #b0b0b0; }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(100, 181, 246, 0.26); }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(158, 158, 158, 0.26); }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.26); }\n\n.mat-chip:not(.mat-basic-chip) {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-chip.mat-chip-selected:not(.mat-basic-chip) {\n  background-color: #808080;\n  color: rgba(255, 255, 255, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-primary {\n    background-color: #64b5f6;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-accent {\n    background-color: #9e9e9e;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-warn {\n    background-color: #f44336;\n    color: white; }\n\n.mat-table {\n  background: white; }\n\n.mat-row, .mat-header-row {\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\n\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-cell {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-datepicker-content {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-next-button,\n.mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12); }\n\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-body-cell-content {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent; }\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: rgba(0, 0, 0, 0.38); }\n\n:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n.mat-calendar-body-selected {\n  background-color: #64b5f6;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(100, 181, 246, 0.4); }\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87); }\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.18); }\n\n.mat-dialog-container {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-expansion-panel {\n  background: white;\n  color: black; }\n\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-expansion-panel-header:focus,\n.mat-expansion-panel-header:hover {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-expansion-panel-header-description {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-icon.mat-primary {\n  color: #64b5f6; }\n\n.mat-icon.mat-accent {\n  color: #9e9e9e; }\n\n.mat-icon.mat-warn {\n  color: #f44336; }\n\n.mat-input-placeholder {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-focused .mat-input-placeholder {\n  color: #64b5f6; }\n  .mat-focused .mat-input-placeholder.mat-accent {\n    color: #9e9e9e; }\n  .mat-focused .mat-input-placeholder.mat-warn {\n    color: #f44336; }\n\n.mat-input-element:disabled {\n  color: rgba(0, 0, 0, 0.38); }\n\ninput.mat-input-element:-webkit-autofill + .mat-input-placeholder .mat-placeholder-required,\n.mat-focused .mat-input-placeholder.mat-float .mat-placeholder-required {\n  color: #9e9e9e; }\n\n.mat-input-underline {\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-input-ripple {\n  background-color: #64b5f6; }\n  .mat-input-ripple.mat-accent {\n    background-color: #9e9e9e; }\n  .mat-input-ripple.mat-warn {\n    background-color: #f44336; }\n\n.mat-input-invalid .mat-input-placeholder {\n  color: #f44336; }\n  .mat-input-invalid .mat-input-placeholder.mat-accent,\n  .mat-input-invalid .mat-input-placeholder.mat-float .mat-placeholder-required {\n    color: #f44336; }\n\n.mat-input-invalid .mat-input-ripple {\n  background-color: #f44336; }\n\n.mat-input-error {\n  color: #f44336; }\n\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-nav-list .mat-list-item {\n  outline: none; }\n  .mat-nav-list .mat-list-item:hover, .mat-nav-list .mat-list-item.mat-list-item-focus {\n    background: rgba(0, 0, 0, 0.04); }\n\n.mat-menu-content {\n  background: white; }\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-menu-item[disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n  .mat-menu-item .mat-icon {\n    color: rgba(0, 0, 0, 0.54);\n    vertical-align: middle; }\n  .mat-menu-item:hover:not([disabled]), .mat-menu-item:focus:not([disabled]) {\n    background: rgba(0, 0, 0, 0.04); }\n\n.mat-paginator {\n  background: white; }\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-paginator-increment,\n.mat-paginator-decrement {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\n\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-decrement {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-progress-bar-background {\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23bbdefb%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar-buffer {\n  background-color: #bbdefb; }\n\n.mat-progress-bar-fill::after {\n  background-color: #64b5f6; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27whitesmoke%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: whitesmoke; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #9e9e9e; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffcdd2%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336; }\n\n.mat-progress-spinner path, .mat-spinner path {\n  stroke: #64b5f6; }\n\n.mat-progress-spinner.mat-accent path, .mat-spinner.mat-accent path {\n  stroke: #9e9e9e; }\n\n.mat-progress-spinner.mat-warn path, .mat-spinner.mat-warn path {\n  stroke: #f44336; }\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-disabled .mat-radio-ripple .mat-ripple-element, .mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #64b5f6; }\n\n.mat-radio-button.mat-primary .mat-radio-inner-circle {\n  background-color: #64b5f6; }\n\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element {\n  background-color: rgba(100, 181, 246, 0.26); }\n\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #9e9e9e; }\n\n.mat-radio-button.mat-accent .mat-radio-inner-circle {\n  background-color: #9e9e9e; }\n\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element {\n  background-color: rgba(158, 158, 158, 0.26); }\n\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336; }\n\n.mat-radio-button.mat-warn .mat-radio-inner-circle {\n  background-color: #f44336; }\n\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.26); }\n\n.mat-select-trigger,\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-select-underline {\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-select-disabled .mat-select-value,\n.mat-select-arrow,\n.mat-select-trigger {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-select-content, .mat-select-panel-done-animating {\n  background: white; }\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-select:focus:not(.mat-select-disabled).mat-primary .mat-select-trigger, .mat-select:focus:not(.mat-select-disabled).mat-primary .mat-select-arrow {\n  color: #64b5f6; }\n\n.mat-select:focus:not(.mat-select-disabled).mat-primary .mat-select-underline {\n  background-color: #64b5f6; }\n\n.mat-select:focus:not(.mat-select-disabled).mat-accent .mat-select-trigger, .mat-select:focus:not(.mat-select-disabled).mat-accent .mat-select-arrow {\n  color: #9e9e9e; }\n\n.mat-select:focus:not(.mat-select-disabled).mat-accent .mat-select-underline {\n  background-color: #9e9e9e; }\n\n.mat-select:focus:not(.mat-select-disabled).mat-warn .mat-select-trigger, .mat-select:focus:not(.mat-select-disabled).mat-warn .mat-select-arrow,\n.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-trigger,\n.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-arrow {\n  color: #f44336; }\n\n.mat-select:focus:not(.mat-select-disabled).mat-warn .mat-select-underline,\n.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-underline {\n  background-color: #f44336; }\n\n.mat-sidenav-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-sidenav {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-sidenav.mat-sidenav-push {\n    background-color: white; }\n\n.mat-sidenav-backdrop.mat-sidenav-shown {\n  background-color: rgba(0, 0, 0, 0.6); }\n\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #9e9e9e; }\n\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(158, 158, 158, 0.5); }\n\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle .mat-ripple-element {\n  background-color: rgba(158, 158, 158, 0.12); }\n\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #2196f3; }\n\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(33, 150, 243, 0.5); }\n\n.mat-slide-toggle.mat-primary:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle.mat-primary .mat-ripple-element {\n  background-color: rgba(33, 150, 243, 0.12); }\n\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #f44336; }\n\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.5); }\n\n.mat-slide-toggle.mat-warn:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle.mat-warn .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.12); }\n\n.mat-disabled .mat-slide-toggle-thumb {\n  background-color: #bdbdbd; }\n\n.mat-disabled .mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-slide-toggle-thumb {\n  background-color: #fafafa; }\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #64b5f6; }\n\n.mat-primary .mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #9e9e9e; }\n\n.mat-accent .mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336; }\n\n.mat-warn .mat-slider-thumb-label-text {\n  color: white; }\n\n.mat-slider-focus-ring {\n  background-color: rgba(158, 158, 158, 0.2); }\n\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: black; }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent; }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7); }\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none; }\n\n.mat-tab-label:focus {\n  background-color: rgba(187, 222, 251, 0.3); }\n\n.mat-ink-bar {\n  background-color: #64b5f6; }\n\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-primary {\n    background: #64b5f6;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-accent {\n    background: #9e9e9e;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-warn {\n    background: #f44336;\n    color: white; }\n\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9); }\n\n.swiper-pagination-bullet {\n  margin: 5px; }\n\n\n\n// WEBPACK FOOTER //\n// B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/styles.scss","@import '~@angular/material/theming';\r\n\r\n@include mat-core();\r\n\r\n$primary: mat-palette($mat-blue, 300);\r\n$accent: mat-palette($mat-grey);\r\n$warn: mat-palette($mat-red);\r\n$theme: mat-light-theme($primary,$accent,$warn);\r\n@include angular-material-theme($theme);\r\n\r\n.swiper-pagination-bullet {\r\n    margin: 5px;\r\n}\n\n\n// WEBPACK FOOTER //\n// B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/src/styles.scss","@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'), url('../../fonts/roboto/Roboto-Thin.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Thin.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Thin.woff') format('woff'), url('../../fonts/roboto/Roboto-Thin.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Thin.svg#Roboto') format('svg');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Thin';\n    src: url('../../fonts/roboto/Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'), url('../../fonts/roboto/Roboto-Thin.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Thin.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Thin.woff') format('woff'), url('../../fonts/roboto/Roboto-Thin.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Thin.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-ThinItalic.eot');\n    src: local('Roboto ThinItalic'), local('Roboto-ThinItalic'), url('../../fonts/roboto/Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-ThinItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-ThinItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-ThinItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-ThinItalic.svg#Roboto') format('svg');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-ThinItalic';\n    src: url('../../fonts/roboto/Roboto-ThinItalic.eot');\n    src: local('Roboto ThinItalic'), local('Roboto-ThinItalic'), url('../../fonts/roboto/Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-ThinItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-ThinItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-ThinItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-ThinItalic.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'), url('../../fonts/roboto/Roboto-Light.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Light.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Light.woff') format('woff'), url('../../fonts/roboto/Roboto-Light.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Light.svg#Roboto') format('svg');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Light';\n    src: url('../../fonts/roboto/Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'), url('../../fonts/roboto/Roboto-Light.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Light.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Light.woff') format('woff'), url('../../fonts/roboto/Roboto-Light.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Light.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-LightItalic.eot');\n    src: local('Roboto LightItalic'), local('Roboto-LightItalic'), url('../../fonts/roboto/Roboto-LightItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-LightItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-LightItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-LightItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-LightItalic.svg#Roboto') format('svg');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-LightItalic';\n    src: url('../../fonts/roboto/Roboto-LightItalic.eot');\n    src: local('Roboto LightItalic'), local('Roboto-LightItalic'), url('../../fonts/roboto/Roboto-LightItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-LightItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-LightItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-LightItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-LightItalic.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Regular.eot');\n    src: local('Roboto Regular'), local('Roboto-Regular'), url('../../fonts/roboto/Roboto-Regular.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Regular.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Regular.woff') format('woff'), url('../../fonts/roboto/Roboto-Regular.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Regular.svg#Roboto') format('svg');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Regular';\n    src: url('../../fonts/roboto/Roboto-Regular.eot');\n    src: local('Roboto Regular'), local('Roboto-Regular'), url('../../fonts/roboto/Roboto-Regular.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Regular.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Regular.woff') format('woff'), url('../../fonts/roboto/Roboto-Regular.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Regular.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-RegularItalic.eot');\n    src: local('Roboto RegularItalic'), local('Roboto-RegularItalic'), url('../../fonts/roboto/Roboto-RegularItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-RegularItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-RegularItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-RegularItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-RegularItalic.svg#Roboto') format('svg');\n    font-weight: 400;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-RegularItalic';\n    src: url('../../fonts/roboto/Roboto-RegularItalic.eot');\n    src: local('Roboto RegularItalic'), local('Roboto-RegularItalic'), url('../../fonts/roboto/Roboto-RegularItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-RegularItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-RegularItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-RegularItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-RegularItalic.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'), url('../../fonts/roboto/Roboto-Medium.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Medium.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Medium.woff') format('woff'), url('../../fonts/roboto/Roboto-Medium.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Medium.svg#Roboto') format('svg');\n    font-weight: 500;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Medium';\n    src: url('../../fonts/roboto/Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'), url('../../fonts/roboto/Roboto-Medium.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Medium.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Medium.woff') format('woff'), url('../../fonts/roboto/Roboto-Medium.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Medium.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-MediumItalic.eot');\n    src: local('Roboto MediumItalic'), local('Roboto-MediumItalic'), url('../../fonts/roboto/Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-MediumItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-MediumItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-MediumItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-MediumItalic.svg#Roboto') format('svg');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-MediumItalic';\n    src: url('../../fonts/roboto/Roboto-MediumItalic.eot');\n    src: local('Roboto MediumItalic'), local('Roboto-MediumItalic'), url('../../fonts/roboto/Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-MediumItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-MediumItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-MediumItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-MediumItalic.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'), url('../../fonts/roboto/Roboto-Bold.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Bold.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Bold.woff') format('woff'), url('../../fonts/roboto/Roboto-Bold.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Bold.svg#Roboto') format('svg');\n    font-weight: 700;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Bold';\n    src: url('../../fonts/roboto/Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'), url('../../fonts/roboto/Roboto-Bold.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Bold.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Bold.woff') format('woff'), url('../../fonts/roboto/Roboto-Bold.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Bold.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-BoldItalic.eot');\n    src: local('Roboto BoldItalic'), local('Roboto-BoldItalic'), url('../../fonts/roboto/Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-BoldItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-BoldItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-BoldItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-BoldItalic.svg#Roboto') format('svg');\n    font-weight: 700;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-BoldItalic';\n    src: url('../../fonts/roboto/Roboto-BoldItalic.eot');\n    src: local('Roboto BoldItalic'), local('Roboto-BoldItalic'), url('../../fonts/roboto/Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-BoldItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-BoldItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-BoldItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-BoldItalic.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'), url('../../fonts/roboto/Roboto-Black.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Black.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Black.woff') format('woff'), url('../../fonts/roboto/Roboto-Black.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Black.svg#Roboto') format('svg');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto-Black';\n    src: url('../../fonts/roboto/Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'), url('../../fonts/roboto/Roboto-Black.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-Black.woff2') format('woff2'), url('../../fonts/roboto/Roboto-Black.woff') format('woff'), url('../../fonts/roboto/Roboto-Black.ttf') format('truetype'), url('../../fonts/roboto/Roboto-Black.svg#Roboto') format('svg');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('../../fonts/roboto/Roboto-BlackItalic.eot');\n    src: local('Roboto BlackItalic'), local('Roboto-BlackItalic'), url('../../fonts/roboto/Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-BlackItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-BlackItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-BlackItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-BlackItalic.svg#Roboto') format('svg');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto-BlackItalic';\n    src: url('../../fonts/roboto/Roboto-BlackItalic.eot');\n    src: local('Roboto BlackItalic'), local('Roboto-BlackItalic'), url('../../fonts/roboto/Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'), url('../../fonts/roboto/Roboto-BlackItalic.woff2') format('woff2'), url('../../fonts/roboto/Roboto-BlackItalic.woff') format('woff'), url('../../fonts/roboto/Roboto-BlackItalic.ttf') format('truetype'), url('../../fonts/roboto/Roboto-BlackItalic.svg#Roboto') format('svg');\n}\n\n\n\n// WEBPACK FOOTER //\n// B:/Users/Alex/Documents/GitHub/WebDevProject/Portfolio/~/roboto-fontface/css/roboto/roboto-fontface.css"],"sourceRoot":"webpack:///"}